imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        handler_id: session.handler.native_file
        save_path: '%kernel.root_dir%/sessions'
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        # naming_strategy: doctrine.orm.naming_strategy.underscore
        #auto_mapping: true
        entity_managers:
            default:
                mappings:
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    AppBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Sonata Configuration
sonata_core: ~
sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
sonata_admin:
    title: What We Do
    title_logo: bundles/app/images/sports.png
    dashboard:
        groups:
            sonata.user.admin:
                on_top: true
                label: menu.item.users
                label_catalogue: ~
                icon: '<i class="fa fa-user"></i>'
                items:
                    - sonata.user.admin.user
                roles: [ ROLE_ADMIN ]
            sonata.participant.admin:
                on_top: true
                label: menu.item.participants
                label_catalogue: ~
                icon: '<i class="fa fa-group"></i>'
                items:
                    - admin.participant
                roles: [ ROLE_ADMIN ]
            sonata.community.admin:
                on_top: true
                label: menu.item.communities
                label_catalogue: ~
                icon: '<i class="fa fa-cube"></i>'
                items:
                    - admin.community
                roles: [ ROLE_ADMIN ]
            sonata.event.admin:
                on_top: true
                label: menu.item.events
                label_catalogue: ~
                icon: '<i class="fa fa-calendar"></i>'
                items:
                    - admin.event
                roles: [ ROLE_ORGANIZER ]
    templates:
        layout: AppBundle::standard_layout.html.twig

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    admin:                  # Admin Classes
        user:
            class: Application\Sonata\UserBundle\Admin\UserAdmin

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    format_listener: true
    serializer:
        serialize_null: true
    view:
        view_response_listener: 'force'
        formats:
            xml: true
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json
